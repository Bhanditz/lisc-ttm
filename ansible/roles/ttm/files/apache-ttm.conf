<VirtualHost *:443>
  # ServerName localhost:443
  # ServerAdmin ttmadmin@example.com
  
  # Just a serving suggestion -- you can put it wherever you want:
  DocumentRoot "/var/www/ttm"
  
  # Log format is also up to you:
  LogFormat "%h %l %u %t \"%r\" %>s %b" common
  LogFormat "%{Referer}i -> %U" referer
  LogFormat "%{User-agent}i" agent
  CustomLog ${APACHE_LOG_DIR}/ttm_access.log common
  ErrorLog ${APACHE_LOG_DIR}/ttm_error.log
  LogLevel warn
  # Further log customization that appaxrently some sites use:
  # CustomLog "${APACHE_LOG_DIR}/ssl_request_log" \
  #           "%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \"%r\" %b"

  SSLEngine on
  
  # You'll need to adjust these for your cert details, of course:
  SSLCertificateFile "/etc/ssl/certs/local/ttm/ttm_example_com.crt"
  SSLCertificateKeyFile "/etc/ssl/certs/local/ttm/ttm.example.com.key"
  SSLCertificateChainFile "/etc/ssl/certs/local/ttm/DigiCertCA.crt"
  
  # Disable directory indexes.  One example is no one should
  # be able to see a list of files in an export directory.
  <Directory /var/www/ttm>
    Options -Indexes
  </Directory>

  <FilesMatch "\.(cgi|shtml|phtml|php)$">
      SSLOptions +StdEnvVars
  </FilesMatch>
  
  BrowserMatch "MSIE [2-5]" \
           nokeepalive ssl-unclean-shutdown \
           downgrade-1.0 force-response-1.0
</VirtualHost>
  
# Redirect port 80 plain http:// traffic to port 443 https://.
<VirtualHost *:80>
   RewriteEngine On
   RewriteCond %{HTTPS} off
   RewriteRule ^/(.*) https://%{HTTP_HOST}/$1 [NC,R,L]
   ## Doing it the way below didn't work for some reason.  Pages
   ## like "http://ttm.example.com/include/add_staff.php" would
   ## redirect to the corresponding "https://" properly, but the
   ## root page "http://ttm.example.com/" (with or without trailing
   ## slash) did not redirect -- instead it served up the default
   ## apache2 "It works!" web page.
   #
   # ServerName ttm.example.com
   # Redirect permanent / https://ttm.example.com/
</VirtualHost>
