#!/bin/sh

# This script runs on an off-site server and fetches an exported prod
# backup there.  This script is the counterpart to export-backup.tmpl.

URL=__URL__
BACKUP_PREFIX=__BACKUP_PREFIX__

cd __DEST_DIR__

TODAY_YMD_PREFIX=`(date +__DATE_YMD_PREFIX__)`

# We don't know the exact filename we're looking for because we don't
# know the exact time of day the backup was made.  But we know most of
# the filename, because we know the day we're interested in.  So we get
# a listing of the server directory and parse out the needed filename.
#
# TODO: document that wget may need this patch on some systems:
# http://lists.gnu.org/archive/html/bug-wget/2013-05/msg00033.html
# (See also https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=686837#37,
# and https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=738625 may be
# relevant though probably not as important as the others.)
EXACT_FILENAMES=`wget -q --no-check-certificate -O - ${URL}   \
  | grep ${BACKUP_PREFIX}-${TODAY_YMD_PREFIX}                 \
  | sed -E                                                    \
    "s|.*(${BACKUP_PREFIX}-${TODAY_YMD_PREFIX}_[0-9.]+\.tar\.gz\.asc).*|\\\\1|"`

for name in ${EXACT_FILENAMES}; do
  echo "Fetching ${URL}/${name} ..."
  wget --no-check-certificate ${URL}/${name}
  echo "Done."
done
